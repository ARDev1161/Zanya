// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control.proto

#include "control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_control_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_control_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Light;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_control_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Motors;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_control_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Servos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_control_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_System;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_control_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Vibro;
}  // namespace protobuf_control_2eproto
class ProtobufControl_ServosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufControl_Servos>
      _instance;
} _ProtobufControl_Servos_default_instance_;
class ProtobufControl_MotorsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufControl_Motors>
      _instance;
} _ProtobufControl_Motors_default_instance_;
class ProtobufControl_LightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufControl_Light>
      _instance;
} _ProtobufControl_Light_default_instance_;
class ProtobufControl_VibroDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufControl_Vibro>
      _instance;
} _ProtobufControl_Vibro_default_instance_;
class ProtobufControl_SystemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufControl_System>
      _instance;
} _ProtobufControl_System_default_instance_;
class ProtobufControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtobufControl>
      _instance;
} _ProtobufControl_default_instance_;
namespace protobuf_control_2eproto {
static void InitDefaultsProtobufControl_Servos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufControl_Servos_default_instance_;
    new (ptr) ::ProtobufControl_Servos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufControl_Servos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Servos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufControl_Servos}, {}};

static void InitDefaultsProtobufControl_Motors() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufControl_Motors_default_instance_;
    new (ptr) ::ProtobufControl_Motors();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufControl_Motors::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Motors =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufControl_Motors}, {}};

static void InitDefaultsProtobufControl_Light() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufControl_Light_default_instance_;
    new (ptr) ::ProtobufControl_Light();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufControl_Light::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Light =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufControl_Light}, {}};

static void InitDefaultsProtobufControl_Vibro() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufControl_Vibro_default_instance_;
    new (ptr) ::ProtobufControl_Vibro();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufControl_Vibro::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_Vibro =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufControl_Vibro}, {}};

static void InitDefaultsProtobufControl_System() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufControl_System_default_instance_;
    new (ptr) ::ProtobufControl_System();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufControl_System::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtobufControl_System =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtobufControl_System}, {}};

static void InitDefaultsProtobufControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtobufControl_default_instance_;
    new (ptr) ::ProtobufControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufControl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ProtobufControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsProtobufControl}, {
      &protobuf_control_2eproto::scc_info_ProtobufControl_Servos.base,
      &protobuf_control_2eproto::scc_info_ProtobufControl_Motors.base,
      &protobuf_control_2eproto::scc_info_ProtobufControl_Light.base,
      &protobuf_control_2eproto::scc_info_ProtobufControl_Vibro.base,
      &protobuf_control_2eproto::scc_info_ProtobufControl_System.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufControl_Servos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufControl_Motors.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufControl_Light.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufControl_Vibro.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufControl_System.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtobufControl.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Servos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Servos, xangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Servos, yangle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Motors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Motors, lpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Motors, ltime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Motors, rpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Motors, rtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Light, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Light, ledpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Light, xenonenable_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Vibro, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Vibro, power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_Vibro, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_System, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_System, haltflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl_System, restartflag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl, servos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl, motors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl, light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl, vibro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufControl, system_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtobufControl_Servos)},
  { 7, -1, sizeof(::ProtobufControl_Motors)},
  { 16, -1, sizeof(::ProtobufControl_Light)},
  { 23, -1, sizeof(::ProtobufControl_Vibro)},
  { 30, -1, sizeof(::ProtobufControl_System)},
  { 37, -1, sizeof(::ProtobufControl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtobufControl_Servos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtobufControl_Motors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtobufControl_Light_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtobufControl_Vibro_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtobufControl_System_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtobufControl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "control.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rcontrol.proto\"\323\003\n\017ProtobufControl\022\'\n\006s"
      "ervos\030\001 \001(\0132\027.ProtobufControl.Servos\022\'\n\006"
      "motors\030\002 \001(\0132\027.ProtobufControl.Motors\022%\n"
      "\005light\030\003 \001(\0132\026.ProtobufControl.Light\022%\n\005"
      "vibro\030\004 \001(\0132\026.ProtobufControl.Vibro\022\'\n\006s"
      "ystem\030\005 \001(\0132\027.ProtobufControl.System\032(\n\006"
      "Servos\022\016\n\006xAngle\030\001 \001(\005\022\016\n\006yAngle\030\002 \001(\005\032F"
      "\n\006Motors\022\016\n\006lPower\030\001 \001(\005\022\r\n\005lTime\030\002 \001(\005\022"
      "\016\n\006rPower\030\003 \001(\005\022\r\n\005rTime\030\004 \001(\005\032.\n\005Light\022"
      "\020\n\010ledPower\030\001 \001(\005\022\023\n\013xenonEnable\030\002 \001(\010\032$"
      "\n\005Vibro\022\r\n\005Power\030\001 \001(\005\022\014\n\004Time\030\002 \001(\005\032/\n\006"
      "System\022\020\n\010haltFlag\030\001 \001(\010\022\023\n\013restartFlag\030"
      "\002 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 493);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "control.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_control_2eproto

// ===================================================================

void ProtobufControl_Servos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufControl_Servos::kXAngleFieldNumber;
const int ProtobufControl_Servos::kYAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufControl_Servos::ProtobufControl_Servos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_control_2eproto::scc_info_ProtobufControl_Servos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufControl.Servos)
}
ProtobufControl_Servos::ProtobufControl_Servos(const ProtobufControl_Servos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xangle_, &from.xangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&yangle_) -
    reinterpret_cast<char*>(&xangle_)) + sizeof(yangle_));
  // @@protoc_insertion_point(copy_constructor:ProtobufControl.Servos)
}

void ProtobufControl_Servos::SharedCtor() {
  ::memset(&xangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yangle_) -
      reinterpret_cast<char*>(&xangle_)) + sizeof(yangle_));
}

ProtobufControl_Servos::~ProtobufControl_Servos() {
  // @@protoc_insertion_point(destructor:ProtobufControl.Servos)
  SharedDtor();
}

void ProtobufControl_Servos::SharedDtor() {
}

void ProtobufControl_Servos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufControl_Servos::descriptor() {
  ::protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufControl_Servos& ProtobufControl_Servos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_control_2eproto::scc_info_ProtobufControl_Servos.base);
  return *internal_default_instance();
}


void ProtobufControl_Servos::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufControl.Servos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&xangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yangle_) -
      reinterpret_cast<char*>(&xangle_)) + sizeof(yangle_));
  _internal_metadata_.Clear();
}

bool ProtobufControl_Servos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufControl.Servos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 xAngle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 yAngle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufControl.Servos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufControl.Servos)
  return false;
#undef DO_
}

void ProtobufControl_Servos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufControl.Servos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xAngle = 1;
  if (this->xangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->xangle(), output);
  }

  // int32 yAngle = 2;
  if (this->yangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->yangle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufControl.Servos)
}

::google::protobuf::uint8* ProtobufControl_Servos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufControl.Servos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xAngle = 1;
  if (this->xangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->xangle(), target);
  }

  // int32 yAngle = 2;
  if (this->yangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->yangle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufControl.Servos)
  return target;
}

size_t ProtobufControl_Servos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufControl.Servos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 xAngle = 1;
  if (this->xangle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xangle());
  }

  // int32 yAngle = 2;
  if (this->yangle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->yangle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufControl_Servos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufControl.Servos)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufControl_Servos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufControl_Servos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufControl.Servos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufControl.Servos)
    MergeFrom(*source);
  }
}

void ProtobufControl_Servos::MergeFrom(const ProtobufControl_Servos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufControl.Servos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xangle() != 0) {
    set_xangle(from.xangle());
  }
  if (from.yangle() != 0) {
    set_yangle(from.yangle());
  }
}

void ProtobufControl_Servos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufControl.Servos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufControl_Servos::CopyFrom(const ProtobufControl_Servos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufControl.Servos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufControl_Servos::IsInitialized() const {
  return true;
}

void ProtobufControl_Servos::Swap(ProtobufControl_Servos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufControl_Servos::InternalSwap(ProtobufControl_Servos* other) {
  using std::swap;
  swap(xangle_, other->xangle_);
  swap(yangle_, other->yangle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufControl_Servos::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufControl_Motors::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufControl_Motors::kLPowerFieldNumber;
const int ProtobufControl_Motors::kLTimeFieldNumber;
const int ProtobufControl_Motors::kRPowerFieldNumber;
const int ProtobufControl_Motors::kRTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufControl_Motors::ProtobufControl_Motors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_control_2eproto::scc_info_ProtobufControl_Motors.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufControl.Motors)
}
ProtobufControl_Motors::ProtobufControl_Motors(const ProtobufControl_Motors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lpower_, &from.lpower_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime_) -
    reinterpret_cast<char*>(&lpower_)) + sizeof(rtime_));
  // @@protoc_insertion_point(copy_constructor:ProtobufControl.Motors)
}

void ProtobufControl_Motors::SharedCtor() {
  ::memset(&lpower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime_) -
      reinterpret_cast<char*>(&lpower_)) + sizeof(rtime_));
}

ProtobufControl_Motors::~ProtobufControl_Motors() {
  // @@protoc_insertion_point(destructor:ProtobufControl.Motors)
  SharedDtor();
}

void ProtobufControl_Motors::SharedDtor() {
}

void ProtobufControl_Motors::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufControl_Motors::descriptor() {
  ::protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufControl_Motors& ProtobufControl_Motors::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_control_2eproto::scc_info_ProtobufControl_Motors.base);
  return *internal_default_instance();
}


void ProtobufControl_Motors::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufControl.Motors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lpower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime_) -
      reinterpret_cast<char*>(&lpower_)) + sizeof(rtime_));
  _internal_metadata_.Clear();
}

bool ProtobufControl_Motors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufControl.Motors)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 lPower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ltime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rPower = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufControl.Motors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufControl.Motors)
  return false;
#undef DO_
}

void ProtobufControl_Motors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufControl.Motors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 lPower = 1;
  if (this->lpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lpower(), output);
  }

  // int32 lTime = 2;
  if (this->ltime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ltime(), output);
  }

  // int32 rPower = 3;
  if (this->rpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rpower(), output);
  }

  // int32 rTime = 4;
  if (this->rtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rtime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufControl.Motors)
}

::google::protobuf::uint8* ProtobufControl_Motors::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufControl.Motors)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 lPower = 1;
  if (this->lpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lpower(), target);
  }

  // int32 lTime = 2;
  if (this->ltime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ltime(), target);
  }

  // int32 rPower = 3;
  if (this->rpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rpower(), target);
  }

  // int32 rTime = 4;
  if (this->rtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rtime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufControl.Motors)
  return target;
}

size_t ProtobufControl_Motors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufControl.Motors)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 lPower = 1;
  if (this->lpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lpower());
  }

  // int32 lTime = 2;
  if (this->ltime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ltime());
  }

  // int32 rPower = 3;
  if (this->rpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rpower());
  }

  // int32 rTime = 4;
  if (this->rtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufControl_Motors::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufControl.Motors)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufControl_Motors* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufControl_Motors>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufControl.Motors)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufControl.Motors)
    MergeFrom(*source);
  }
}

void ProtobufControl_Motors::MergeFrom(const ProtobufControl_Motors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufControl.Motors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lpower() != 0) {
    set_lpower(from.lpower());
  }
  if (from.ltime() != 0) {
    set_ltime(from.ltime());
  }
  if (from.rpower() != 0) {
    set_rpower(from.rpower());
  }
  if (from.rtime() != 0) {
    set_rtime(from.rtime());
  }
}

void ProtobufControl_Motors::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufControl.Motors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufControl_Motors::CopyFrom(const ProtobufControl_Motors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufControl.Motors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufControl_Motors::IsInitialized() const {
  return true;
}

void ProtobufControl_Motors::Swap(ProtobufControl_Motors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufControl_Motors::InternalSwap(ProtobufControl_Motors* other) {
  using std::swap;
  swap(lpower_, other->lpower_);
  swap(ltime_, other->ltime_);
  swap(rpower_, other->rpower_);
  swap(rtime_, other->rtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufControl_Motors::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufControl_Light::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufControl_Light::kLedPowerFieldNumber;
const int ProtobufControl_Light::kXenonEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufControl_Light::ProtobufControl_Light()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_control_2eproto::scc_info_ProtobufControl_Light.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufControl.Light)
}
ProtobufControl_Light::ProtobufControl_Light(const ProtobufControl_Light& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ledpower_, &from.ledpower_,
    static_cast<size_t>(reinterpret_cast<char*>(&xenonenable_) -
    reinterpret_cast<char*>(&ledpower_)) + sizeof(xenonenable_));
  // @@protoc_insertion_point(copy_constructor:ProtobufControl.Light)
}

void ProtobufControl_Light::SharedCtor() {
  ::memset(&ledpower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xenonenable_) -
      reinterpret_cast<char*>(&ledpower_)) + sizeof(xenonenable_));
}

ProtobufControl_Light::~ProtobufControl_Light() {
  // @@protoc_insertion_point(destructor:ProtobufControl.Light)
  SharedDtor();
}

void ProtobufControl_Light::SharedDtor() {
}

void ProtobufControl_Light::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufControl_Light::descriptor() {
  ::protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufControl_Light& ProtobufControl_Light::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_control_2eproto::scc_info_ProtobufControl_Light.base);
  return *internal_default_instance();
}


void ProtobufControl_Light::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufControl.Light)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ledpower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xenonenable_) -
      reinterpret_cast<char*>(&ledpower_)) + sizeof(xenonenable_));
  _internal_metadata_.Clear();
}

bool ProtobufControl_Light::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufControl.Light)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ledPower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ledpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool xenonEnable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &xenonenable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufControl.Light)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufControl.Light)
  return false;
#undef DO_
}

void ProtobufControl_Light::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufControl.Light)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ledPower = 1;
  if (this->ledpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ledpower(), output);
  }

  // bool xenonEnable = 2;
  if (this->xenonenable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->xenonenable(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufControl.Light)
}

::google::protobuf::uint8* ProtobufControl_Light::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufControl.Light)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ledPower = 1;
  if (this->ledpower() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ledpower(), target);
  }

  // bool xenonEnable = 2;
  if (this->xenonenable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->xenonenable(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufControl.Light)
  return target;
}

size_t ProtobufControl_Light::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufControl.Light)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ledPower = 1;
  if (this->ledpower() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ledpower());
  }

  // bool xenonEnable = 2;
  if (this->xenonenable() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufControl_Light::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufControl.Light)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufControl_Light* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufControl_Light>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufControl.Light)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufControl.Light)
    MergeFrom(*source);
  }
}

void ProtobufControl_Light::MergeFrom(const ProtobufControl_Light& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufControl.Light)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ledpower() != 0) {
    set_ledpower(from.ledpower());
  }
  if (from.xenonenable() != 0) {
    set_xenonenable(from.xenonenable());
  }
}

void ProtobufControl_Light::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufControl.Light)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufControl_Light::CopyFrom(const ProtobufControl_Light& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufControl.Light)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufControl_Light::IsInitialized() const {
  return true;
}

void ProtobufControl_Light::Swap(ProtobufControl_Light* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufControl_Light::InternalSwap(ProtobufControl_Light* other) {
  using std::swap;
  swap(ledpower_, other->ledpower_);
  swap(xenonenable_, other->xenonenable_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufControl_Light::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufControl_Vibro::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufControl_Vibro::kPowerFieldNumber;
const int ProtobufControl_Vibro::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufControl_Vibro::ProtobufControl_Vibro()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_control_2eproto::scc_info_ProtobufControl_Vibro.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufControl.Vibro)
}
ProtobufControl_Vibro::ProtobufControl_Vibro(const ProtobufControl_Vibro& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&power_, &from.power_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&power_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:ProtobufControl.Vibro)
}

void ProtobufControl_Vibro::SharedCtor() {
  ::memset(&power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&power_)) + sizeof(time_));
}

ProtobufControl_Vibro::~ProtobufControl_Vibro() {
  // @@protoc_insertion_point(destructor:ProtobufControl.Vibro)
  SharedDtor();
}

void ProtobufControl_Vibro::SharedDtor() {
}

void ProtobufControl_Vibro::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufControl_Vibro::descriptor() {
  ::protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufControl_Vibro& ProtobufControl_Vibro::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_control_2eproto::scc_info_ProtobufControl_Vibro.base);
  return *internal_default_instance();
}


void ProtobufControl_Vibro::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufControl.Vibro)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&power_)) + sizeof(time_));
  _internal_metadata_.Clear();
}

bool ProtobufControl_Vibro::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufControl.Vibro)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Power = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufControl.Vibro)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufControl.Vibro)
  return false;
#undef DO_
}

void ProtobufControl_Vibro::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufControl.Vibro)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Power = 1;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->power(), output);
  }

  // int32 Time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufControl.Vibro)
}

::google::protobuf::uint8* ProtobufControl_Vibro::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufControl.Vibro)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Power = 1;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->power(), target);
  }

  // int32 Time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufControl.Vibro)
  return target;
}

size_t ProtobufControl_Vibro::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufControl.Vibro)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Power = 1;
  if (this->power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->power());
  }

  // int32 Time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufControl_Vibro::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufControl.Vibro)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufControl_Vibro* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufControl_Vibro>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufControl.Vibro)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufControl.Vibro)
    MergeFrom(*source);
  }
}

void ProtobufControl_Vibro::MergeFrom(const ProtobufControl_Vibro& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufControl.Vibro)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.power() != 0) {
    set_power(from.power());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void ProtobufControl_Vibro::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufControl.Vibro)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufControl_Vibro::CopyFrom(const ProtobufControl_Vibro& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufControl.Vibro)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufControl_Vibro::IsInitialized() const {
  return true;
}

void ProtobufControl_Vibro::Swap(ProtobufControl_Vibro* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufControl_Vibro::InternalSwap(ProtobufControl_Vibro* other) {
  using std::swap;
  swap(power_, other->power_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufControl_Vibro::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufControl_System::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufControl_System::kHaltFlagFieldNumber;
const int ProtobufControl_System::kRestartFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufControl_System::ProtobufControl_System()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_control_2eproto::scc_info_ProtobufControl_System.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufControl.System)
}
ProtobufControl_System::ProtobufControl_System(const ProtobufControl_System& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&haltflag_, &from.haltflag_,
    static_cast<size_t>(reinterpret_cast<char*>(&restartflag_) -
    reinterpret_cast<char*>(&haltflag_)) + sizeof(restartflag_));
  // @@protoc_insertion_point(copy_constructor:ProtobufControl.System)
}

void ProtobufControl_System::SharedCtor() {
  ::memset(&haltflag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&restartflag_) -
      reinterpret_cast<char*>(&haltflag_)) + sizeof(restartflag_));
}

ProtobufControl_System::~ProtobufControl_System() {
  // @@protoc_insertion_point(destructor:ProtobufControl.System)
  SharedDtor();
}

void ProtobufControl_System::SharedDtor() {
}

void ProtobufControl_System::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufControl_System::descriptor() {
  ::protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufControl_System& ProtobufControl_System::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_control_2eproto::scc_info_ProtobufControl_System.base);
  return *internal_default_instance();
}


void ProtobufControl_System::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufControl.System)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&haltflag_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&restartflag_) -
      reinterpret_cast<char*>(&haltflag_)) + sizeof(restartflag_));
  _internal_metadata_.Clear();
}

bool ProtobufControl_System::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufControl.System)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool haltFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &haltflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool restartFlag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &restartflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufControl.System)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufControl.System)
  return false;
#undef DO_
}

void ProtobufControl_System::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufControl.System)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool haltFlag = 1;
  if (this->haltflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->haltflag(), output);
  }

  // bool restartFlag = 2;
  if (this->restartflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->restartflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufControl.System)
}

::google::protobuf::uint8* ProtobufControl_System::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufControl.System)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool haltFlag = 1;
  if (this->haltflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->haltflag(), target);
  }

  // bool restartFlag = 2;
  if (this->restartflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->restartflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufControl.System)
  return target;
}

size_t ProtobufControl_System::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufControl.System)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool haltFlag = 1;
  if (this->haltflag() != 0) {
    total_size += 1 + 1;
  }

  // bool restartFlag = 2;
  if (this->restartflag() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufControl_System::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufControl.System)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufControl_System* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufControl_System>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufControl.System)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufControl.System)
    MergeFrom(*source);
  }
}

void ProtobufControl_System::MergeFrom(const ProtobufControl_System& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufControl.System)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.haltflag() != 0) {
    set_haltflag(from.haltflag());
  }
  if (from.restartflag() != 0) {
    set_restartflag(from.restartflag());
  }
}

void ProtobufControl_System::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufControl.System)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufControl_System::CopyFrom(const ProtobufControl_System& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufControl.System)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufControl_System::IsInitialized() const {
  return true;
}

void ProtobufControl_System::Swap(ProtobufControl_System* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufControl_System::InternalSwap(ProtobufControl_System* other) {
  using std::swap;
  swap(haltflag_, other->haltflag_);
  swap(restartflag_, other->restartflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufControl_System::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtobufControl::InitAsDefaultInstance() {
  ::_ProtobufControl_default_instance_._instance.get_mutable()->servos_ = const_cast< ::ProtobufControl_Servos*>(
      ::ProtobufControl_Servos::internal_default_instance());
  ::_ProtobufControl_default_instance_._instance.get_mutable()->motors_ = const_cast< ::ProtobufControl_Motors*>(
      ::ProtobufControl_Motors::internal_default_instance());
  ::_ProtobufControl_default_instance_._instance.get_mutable()->light_ = const_cast< ::ProtobufControl_Light*>(
      ::ProtobufControl_Light::internal_default_instance());
  ::_ProtobufControl_default_instance_._instance.get_mutable()->vibro_ = const_cast< ::ProtobufControl_Vibro*>(
      ::ProtobufControl_Vibro::internal_default_instance());
  ::_ProtobufControl_default_instance_._instance.get_mutable()->system_ = const_cast< ::ProtobufControl_System*>(
      ::ProtobufControl_System::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtobufControl::kServosFieldNumber;
const int ProtobufControl::kMotorsFieldNumber;
const int ProtobufControl::kLightFieldNumber;
const int ProtobufControl::kVibroFieldNumber;
const int ProtobufControl::kSystemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtobufControl::ProtobufControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_control_2eproto::scc_info_ProtobufControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufControl)
}
ProtobufControl::ProtobufControl(const ProtobufControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_servos()) {
    servos_ = new ::ProtobufControl_Servos(*from.servos_);
  } else {
    servos_ = NULL;
  }
  if (from.has_motors()) {
    motors_ = new ::ProtobufControl_Motors(*from.motors_);
  } else {
    motors_ = NULL;
  }
  if (from.has_light()) {
    light_ = new ::ProtobufControl_Light(*from.light_);
  } else {
    light_ = NULL;
  }
  if (from.has_vibro()) {
    vibro_ = new ::ProtobufControl_Vibro(*from.vibro_);
  } else {
    vibro_ = NULL;
  }
  if (from.has_system()) {
    system_ = new ::ProtobufControl_System(*from.system_);
  } else {
    system_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufControl)
}

void ProtobufControl::SharedCtor() {
  ::memset(&servos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&system_) -
      reinterpret_cast<char*>(&servos_)) + sizeof(system_));
}

ProtobufControl::~ProtobufControl() {
  // @@protoc_insertion_point(destructor:ProtobufControl)
  SharedDtor();
}

void ProtobufControl::SharedDtor() {
  if (this != internal_default_instance()) delete servos_;
  if (this != internal_default_instance()) delete motors_;
  if (this != internal_default_instance()) delete light_;
  if (this != internal_default_instance()) delete vibro_;
  if (this != internal_default_instance()) delete system_;
}

void ProtobufControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtobufControl::descriptor() {
  ::protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtobufControl& ProtobufControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_control_2eproto::scc_info_ProtobufControl.base);
  return *internal_default_instance();
}


void ProtobufControl::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && servos_ != NULL) {
    delete servos_;
  }
  servos_ = NULL;
  if (GetArenaNoVirtual() == NULL && motors_ != NULL) {
    delete motors_;
  }
  motors_ = NULL;
  if (GetArenaNoVirtual() == NULL && light_ != NULL) {
    delete light_;
  }
  light_ = NULL;
  if (GetArenaNoVirtual() == NULL && vibro_ != NULL) {
    delete vibro_;
  }
  vibro_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
  _internal_metadata_.Clear();
}

bool ProtobufControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufControl.Servos servos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_servos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufControl.Motors motors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufControl.Light light = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_light()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufControl.Vibro vibro = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vibro()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufControl.System system = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufControl)
  return false;
#undef DO_
}

void ProtobufControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtobufControl.Servos servos = 1;
  if (this->has_servos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_servos(), output);
  }

  // .ProtobufControl.Motors motors = 2;
  if (this->has_motors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_motors(), output);
  }

  // .ProtobufControl.Light light = 3;
  if (this->has_light()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_light(), output);
  }

  // .ProtobufControl.Vibro vibro = 4;
  if (this->has_vibro()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_vibro(), output);
  }

  // .ProtobufControl.System system = 5;
  if (this->has_system()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_system(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufControl)
}

::google::protobuf::uint8* ProtobufControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtobufControl.Servos servos = 1;
  if (this->has_servos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_servos(), deterministic, target);
  }

  // .ProtobufControl.Motors motors = 2;
  if (this->has_motors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_motors(), deterministic, target);
  }

  // .ProtobufControl.Light light = 3;
  if (this->has_light()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_light(), deterministic, target);
  }

  // .ProtobufControl.Vibro vibro = 4;
  if (this->has_vibro()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_vibro(), deterministic, target);
  }

  // .ProtobufControl.System system = 5;
  if (this->has_system()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_system(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufControl)
  return target;
}

size_t ProtobufControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufControl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtobufControl.Servos servos = 1;
  if (this->has_servos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *servos_);
  }

  // .ProtobufControl.Motors motors = 2;
  if (this->has_motors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *motors_);
  }

  // .ProtobufControl.Light light = 3;
  if (this->has_light()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *light_);
  }

  // .ProtobufControl.Vibro vibro = 4;
  if (this->has_vibro()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vibro_);
  }

  // .ProtobufControl.System system = 5;
  if (this->has_system()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtobufControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufControl)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtobufControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtobufControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufControl)
    MergeFrom(*source);
  }
}

void ProtobufControl::MergeFrom(const ProtobufControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_servos()) {
    mutable_servos()->::ProtobufControl_Servos::MergeFrom(from.servos());
  }
  if (from.has_motors()) {
    mutable_motors()->::ProtobufControl_Motors::MergeFrom(from.motors());
  }
  if (from.has_light()) {
    mutable_light()->::ProtobufControl_Light::MergeFrom(from.light());
  }
  if (from.has_vibro()) {
    mutable_vibro()->::ProtobufControl_Vibro::MergeFrom(from.vibro());
  }
  if (from.has_system()) {
    mutable_system()->::ProtobufControl_System::MergeFrom(from.system());
  }
}

void ProtobufControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtobufControl::CopyFrom(const ProtobufControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtobufControl::IsInitialized() const {
  return true;
}

void ProtobufControl::Swap(ProtobufControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtobufControl::InternalSwap(ProtobufControl* other) {
  using std::swap;
  swap(servos_, other->servos_);
  swap(motors_, other->motors_);
  swap(light_, other->light_);
  swap(vibro_, other->vibro_);
  swap(system_, other->system_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtobufControl::GetMetadata() const {
  protobuf_control_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufControl_Servos* Arena::CreateMaybeMessage< ::ProtobufControl_Servos >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufControl_Servos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufControl_Motors* Arena::CreateMaybeMessage< ::ProtobufControl_Motors >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufControl_Motors >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufControl_Light* Arena::CreateMaybeMessage< ::ProtobufControl_Light >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufControl_Light >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufControl_Vibro* Arena::CreateMaybeMessage< ::ProtobufControl_Vibro >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufControl_Vibro >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufControl_System* Arena::CreateMaybeMessage< ::ProtobufControl_System >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufControl_System >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufControl* Arena::CreateMaybeMessage< ::ProtobufControl >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufControl >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
